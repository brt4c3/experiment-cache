apiVersion: v1
kind: ConfigMap
metadata:
  name: react-env-config
data:
  entrypoint.sh: |
    #!/bin/sh
    echo "Creating config.js..."
    envsubst < /usr/share/nginx/html/config.template.js > /usr/share/nginx/html/config.js
    exec nginx -g 'daemon off;'

  config.template.js: |
    window.REACT_APP_BACKEND_URL="${REACT_APP_BACKEND_URL}";
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-frontend
  template:
    metadata:
      labels:
        app: react-frontend
    spec:
      containers:
      - name: react-frontend
        image: react-cache-frontend
        ports:
        - containerPort: 80
        env:
        - name: REACT_APP_BACKEND_URL
          value: "http://tomcat-service/cache"  
        volumeMounts:
        - name: react-entrypoint
          mountPath: /docker-entrypoint.d/
        - name: react-config
          mountPath: /usr/share/nginx/html/config.template.js
          subPath: config.template.js
        - name: react-config
          mountPath: /docker-entrypoint.d/entrypoint.sh
          subPath: entrypoint.sh
      volumes:
      - name: react-config
        configMap:
          name: react-env-config
      - name: react-entrypoint
        emptyDir: {}
      command: ["/docker-entrypoint.d/entrypoint.sh"]

---
apiVersion: v1
kind: Service
metadata:
  name: react-frontend-service
spec:
  selector:
    app: react-frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: NodePort
