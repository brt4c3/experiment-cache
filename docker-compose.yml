services:
  mongo-fallback:
    build:
      context: ./mongo
      dockerfile: Dockerfile
    container_name: mongo-fallback
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - backend

  springboot-app:
    build:
      context: ./app
      dockerfile: Dockerfile
      target: app 
      args:
        - MONGODB_URI=mongodb://mongo-fallback:27017/testdb
    container_name: springboot-app
    ports:
      - "8080:8080"  # host:container
      - "12345:12345"  # JMX Exporter metrics
    environment:
      # Spring Boot picks up this URI automatically
      SPRING_DATA_MONGODB_URI: mongodb://mongo-fallback:27017/testdb
    depends_on:
      - mongo-fallback
    healthcheck:
      test: ["CMD","curl","-f","http://localhost:8080/cache"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - backend

  react-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_BACKEND_URL=http://localhost:8080
    image: myorg/react-frontend:latest
    ports:
      - "3000:80"        # host 3000 → container 80
    restart: unless-stopped
    depends_on: 
      - springboot-app
    networks:
      - backend

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - backend

  node-exporter:
    build:
      context: ./app             # Dockerfile のあるディレクトリ
      dockerfile: Dockerfile
      target: node-exporter      # 上で定義したステージ名
    container_name: node-exporter
    pid: "host"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - "9100:9100"
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    # publish container’s 3000 → random host port
    ports:
      - "3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"   # change as you like
    depends_on:
      - prometheus
    networks:
      - backend

networks:
  backend:
    driver: bridge
